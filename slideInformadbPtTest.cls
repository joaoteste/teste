@isTest (SeeAllData=true)
public class slideInformadbPtTest implements WebServiceMock{
    
    public  void doInvoke(
        Object stub,
        Object request,
        Map<String, Object> response, 
        String endpoint,
        String soapAction,
        String requestName,
        String responseNS,
        String responseName,
        String responseType) {
            // Create response element from the autogenerated class.
            // Populate response element.
            // Add response element to the response parameter, as follows:
            response.put('response_x', slideInformadbPtTest.getInfoFromExternalService(endpoint));
            
            
        }
    // used to test callout to WebService
    public static HttpResponse getInfoFromExternalService(String endpoint) {
        
        // String Body = '<Relatorio data_xml="2016-12-05" id_xml="41633111"><Identificacao><IDPrincipais><IDPrincipal><EstabelecimentoSecundario>N</EstabelecimentoSecundario></IDPrincipal><IDPrincipalX1></Relatorio>';
        String xml = '<Relatorio data_xml="2016-12-06" id_xml="41638716"><Identificacao><IDPrincipais><IDPrincipal><EstabelecimentoSecundario>N</EstabelecimentoSecundario>';
        xml += '</IDPrincipal><IDPrincipalX1><ICI>6200025197200000</ICI><DataUltMod>2011-02-09</DataUltMod></IDPrincipalX1></IDPrincipais><Anexas>';
        xml += '<Anexa tipo="ID01">500572585</Anexa><Anexa tipo="ID02">500572585</Anexa><Anexa tipo="ID03">337460971</Anexa></Anexas><Denominacoes><Denominacao situacao="1" tipo="1"><ValorDeno>JORGE &amp; JORGE, LDA</ValorDeno>';
        xml += '<DataInformacao>2002-07-05</DataInformacao></Denominacao></Denominacoes><FormasJuridicas><FormaJuridica situacao="1">LDA</FormaJuridica>';
        xml += '</FormasJuridicas><Estado><ValorEstado>B10</ValorEstado><DataInformacao>2011-02-09</DataInformacao></Estado><InformacoesLegais><InformacaoLegal>';
        xml += '<DataInicioNegocios>1968-10-29</DataInicioNegocios><ConservatoriaActual>1810</ConservatoriaActual></InformacaoLegal><InformacaoLegalX1>';
        xml += '<DataConstituicao>1968-10-29</DataConstituicao></InformacaoLegalX1></InformacoesLegais><Capitais divisa="EUR"><Capital><CapitalSocial>5000</CapitalSocial>';
        xml += '</Capital></Capitais><Empregados><DetalheEmpregado situacao="1"><Empregado><Efectivos>1</Efectivos><DataInformacao>2007-12-31</DataInformacao></Empregado>';
        xml += '<EmpregadoX1><Fonte>IES</Fonte></EmpregadoX1></DetalheEmpregado><DetalheEmpregado situacao="2"><Empregado><Efectivos>1</Efectivos>';
        xml += '<DataInformacao>2006-12-31</DataInformacao></Empregado><EmpregadoX1><Fonte>IES</Fonte></EmpregadoX1></DetalheEmpregado><DetalheEmpregado situacao="2">';
        xml += '<Empregado><Efectivos>1</Efectivos><DataInformacao>2002-07-05</DataInformacao></Empregado></DetalheEmpregado></Empregados></Identificacao><Localizacao>';
        xml += '<Moradas><DetalheMorada situacao="1" tipo="A40"><Morada><ValorMorada>OLIVEIRA DE FRADES 3680-000 OLIVEIRA DE FRADES</ValorMorada></Morada></DetalheMorada>';
        xml += '<DetalheMorada situacao="1" tipo="B10"><Morada><NomeVia>PORCELHE</NomeVia><CodigoPostal>3680-019</CodigoPostal><EnderecoPostal>ARCOZELO DAS MAIAS</EnderecoPostal>';
        xml += '<Localidade>PORCELHE</Localidade><Concelho>OLIVEIRA DE FRADES</Concelho></Morada><MoradaX1><Freguesia>ARCOZELO DAS MAIAS</Freguesia><Distrito>18</Distrito><CoordX>-8.27231247287</CoordX><CoordY>40.7369174569</CoordY></MoradaX1>';
        xml += '</DetalheMorada></Moradas></Localizacao><Actividades><RamoNegocio><DetalheActividade situacao="1" tipo="1"><Actividade><Descricao>Servi√ßos</Descricao><SIC>4119</SIC></Actividade><ActividadeX1>49392</ActividadeX1></DetalheActividade>';
        xml += '</RamoNegocio></Actividades><ResumoX1><IndBolsa>0</IndBolsa><IndTelefone>0</IndTelefone><IndFax>0</IndFax><IndEmail>0</IndEmail><IndOPC>1</IndOPC><TotEmpregados>1</TotEmpregados><IndImport>0</IndImport><IndExport>0</IndExport><IndImprensa>0</IndImprensa>';
        xml += '<IndEmpresaMae>0</IndEmpresaMae><IndSubsidiarias>0</IndSubsidiarias><TotSubsidiarias>0</TotSubsidiarias><IndParticipadas>0</IndParticipadas><TotParticipadas>0</TotParticipadas><IndIncidentes>0';
        xml += '</IndIncidentes><TotIncidentes>0</TotIncidentes><IndAccaoInsolvencia>0</IndAccaoInsolvencia><IndProcessoInsolvencia>0</IndProcessoInsolvencia><NumFiliais>0</NumFiliais><IndExpPagamentos>0</IndExpPagamentos><IndProcAdmon>0</IndProcAdmon>';
        xml += '<IndCertificacao>0</IndCertificacao><CapacidadeFinanceira>NQ</CapacidadeFinanceira><CapitalSocial>5000</CapitalSocial><CAE>49392</CAE><DataConstituicao>1968-10-29</DataConstituicao><DataPublicacaoLegal>2011-02-17</DataPublicacaoLegal><DataInicioNegocios>1968-10-29';
        xml += '</DataInicioNegocios><EstadoActCod>X</EstadoActCod><CF2>NQ</CF2><PubLegaisUlt12meses>0</PubLegaisUlt12meses><IndDimensao>ND</IndDimensao><IndProcessoRevitalizacao>0</IndProcessoRevitalizacao><IndDormant>0</IndDormant><IndSActComer>0</IndSActComer></ResumoX1><FichaEmpresaX1><Nome>JORGE &amp; JORGE, LDA</Nome>';
        xml += '<Duns>337460971</Duns><NumeroContribuinte>500572585</NumeroContribuinte><TipoMorada>UNICA</TipoMorada><NomeVia>PORCELHE</NomeVia><Localidade>PORCELHE</Localidade><CodigoPostal>3680-019</CodigoPostal><EnderecoPostal>ARCOZELO DAS MAIAS</EnderecoPostal><SIC>4119</SIC><DescricaoSIC>Transporte urbano de passageiros, NCA</DescricaoSIC>';
        xml += '<CAE>49392</CAE><DescricaoCAE>Outros transportes terrestres de passageiros diversos, n.e</DescricaoCAE><DataUltimoBalancoPublicado>2007</DataUltimoBalancoPublicado><NumeroConsultas>0';
        xml += '</NumeroConsultas><IndMediasSectoriais>0</IndMediasSectoriais><TipoEmpresa>Real</TipoEmpresa></FichaEmpresaX1></Relatorio>';
        
        
        HttpRequest req = new HttpRequest();
        req.setEndpoint(endpoint);
        req.setMethod('GET');
        Http h = new Http();
        HttpResponse res = h.send(req);
        
        return res;
    }
    
    @isTest
    public static void slideInformadbPtTest () {
        // test WebService CallOut
        StaticResourceCalloutMock mock = new StaticResourceCalloutMock();
        mock.setStaticResource('XMLCOMER_TestWS');
        mock.setStatusCode(200);
        mock.setHeader('Content-Type', 'text/xml');
        Test.setMock(HttpCalloutMock.class, mock);
        HttpResponse res=slideInformadbPtTest.getInfoFromExternalService('https://slide.informadb.pt/SLIDE/SLIDE.asmx');
        
        slideInformadbPtTest p =new slideInformadbPtTest();    
        Test.setMock(WebServiceMock.class, p);
        slideInformadbPt.SLIDESoap cl= new slideInformadbPt.SLIDESoap();
        slideInformadbPt.SLIDECredentials cred= new slideInformadbPt.SLIDECredentials();
        slideInformadbPt.GetReportResponse_element resp= new   slideInformadbPt.GetReportResponse_element();
        slideInformadbPt.ConteudosResposta x=new   slideInformadbPt.ConteudosResposta ();
        slideInformadbPt.Conteudos y=new   slideInformadbPt.Conteudos ();
        slideInformadbPt.ArrayOfTipoOutput tipOutput= new  slideInformadbPt.ArrayOfTipoOutput();
        cred.Username='518163'; cred.Password='QAZFDBVL7R';  cl.SLIDECredentials = cred; String tipId = 'Nif';  String valorId = '506677702';  String idProcesso= 'XMLCOMER';       String bocados= 'True';        String refCliente = '';
        tipOutput.TipoOutput=new String[]{'Xml'};  
            slideInformadbPt.SlideResponse   response = new slideInformadbPt.SlideResponse(); 
        cl.GetReport(tipId, valorId, idProcesso, bocados, refCliente, tipOutput);
        //system.assertEquals(response.SlideResponseContents[0].Conteudo, res.getBody());
        
    } 
}